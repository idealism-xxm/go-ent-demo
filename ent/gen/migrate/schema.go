// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/facebookincubator/ent/dialect/sql/schema"
	"github.com/facebookincubator/ent/schema/field"
)

var (
	// ArticleColumns holds the columns for the "article" table.
	ArticleColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "title", Type: field.TypeString, Size: 32},
		{Name: "content", Type: field.TypeString, Size: 2147483647},
		{Name: "article_author", Type: field.TypeInt, Nullable: true},
	}
	// ArticleTable holds the schema information for the "article" table.
	ArticleTable = &schema.Table{
		Name:       "article",
		Columns:    ArticleColumns,
		PrimaryKey: []*schema.Column{ArticleColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "article_user_author",
				Columns: []*schema.Column{ArticleColumns[5]},

				RefColumns: []*schema.Column{UserColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// GroupColumns holds the columns for the "group" table.
	GroupColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true},
	}
	// GroupTable holds the schema information for the "group" table.
	GroupTable = &schema.Table{
		Name:        "group",
		Columns:     GroupColumns,
		PrimaryKey:  []*schema.Column{GroupColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// UserColumns holds the columns for the "user" table.
	UserColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "nickname", Type: field.TypeString, Size: 16},
		{Name: "username", Type: field.TypeString, Unique: true, Size: 16},
		{Name: "email", Type: field.TypeString, Unique: true, Size: 32},
	}
	// UserTable holds the schema information for the "user" table.
	UserTable = &schema.Table{
		Name:        "user",
		Columns:     UserColumns,
		PrimaryKey:  []*schema.Column{UserColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
		Indexes: []*schema.Index{
			{
				Name:    "user_nickname_created_at",
				Unique:  false,
				Columns: []*schema.Column{UserColumns[3], UserColumns[1]},
			},
		},
	}
	// GroupUsersColumns holds the columns for the "group_users" table.
	GroupUsersColumns = []*schema.Column{
		{Name: "group_id", Type: field.TypeInt},
		{Name: "user_id", Type: field.TypeInt},
	}
	// GroupUsersTable holds the schema information for the "group_users" table.
	GroupUsersTable = &schema.Table{
		Name:       "group_users",
		Columns:    GroupUsersColumns,
		PrimaryKey: []*schema.Column{GroupUsersColumns[0], GroupUsersColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "group_users_group_id",
				Columns: []*schema.Column{GroupUsersColumns[0]},

				RefColumns: []*schema.Column{GroupColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:  "group_users_user_id",
				Columns: []*schema.Column{GroupUsersColumns[1]},

				RefColumns: []*schema.Column{UserColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ArticleTable,
		GroupTable,
		UserTable,
		GroupUsersTable,
	}
)

func init() {
	ArticleTable.ForeignKeys[0].RefTable = UserTable
	GroupUsersTable.ForeignKeys[0].RefTable = GroupTable
	GroupUsersTable.ForeignKeys[1].RefTable = UserTable
}
